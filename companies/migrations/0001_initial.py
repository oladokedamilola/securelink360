# Generated by Django 5.2.5 on 2025-09-12 01:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('domain', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('scope', models.CharField(choices=[('company', 'Company-wide'), ('team', 'Team-only')], default='team', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='companies.company')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_encrypted', models.BinaryField()),
                ('plan', models.CharField(choices=[('basic', 'Basic'), ('pro', 'Pro'), ('enterprise', 'Enterprise')], default='basic', max_length=20)),
                ('seats', models.PositiveIntegerField(default=10)),
                ('expiry_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='license', to='companies.company')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'db_table': 'company_tasks',
                'ordering': ['-created_at'],
                'permissions': [('can_assign_task', 'Can assign tasks to users'), ('can_view_all_tasks', 'Can view all tasks in the company')],
                'get_latest_by': 'created_at',
                'abstract': False,
                'managed': True,
                'default_related_name': 'tasks',
                'indexes': [models.Index(fields=['assigned_to', 'completed'], name='company_tas_assigne_c3e447_idx'), models.Index(fields=['due_date'], name='company_tas_due_dat_c0d6fd_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('due_date__gte', models.F('created_at'))), name='due_date_after_created_at')],
                'unique_together': {('assigned_to', 'description', 'created_at')},
            },
        ),
    ]
